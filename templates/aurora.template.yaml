specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
{{#exchanges}}
  - kind: ethereum/contract
    name: {{name}}
    network: {{network}}
    source:
      address: "{{address}}"
      abi: EndemicExchange
      startBlock: {{block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFT
        - Account
      abis:
        - name: EndemicExchange
          file: ./abis/EndemicExchange.json
      eventHandlers:
        - event: AuctionCreated(indexed address,indexed uint256,indexed bytes32,uint256,uint256,uint256,address,uint256,bytes4)
          handler: handleAuctionCreated
        - event:  AuctionSuccessful(indexed bytes32,indexed uint256,address,uint256,uint256)
          handler: handleAuctionSuccessful
        - event:  AuctionCancelled(indexed bytes32)
          handler: handleAuctionCancelled
      file: ./src/handlers/exchange.ts
{{/exchanges}}

  - kind: ethereum/contract
    name: Offer
    network: {{network}}
    source:
      address: "{{offerAddress}}"
      abi: Offer
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFT
        - Account
      abis:
        - name: Offer
          file: ./abis/Offer.json
      eventHandlers:
        - event: OfferCreated(uint256,indexed address,indexed uint256,indexed address,uint256,uint256)
          handler: handleOfferCreated
        - event: OfferAccepted(uint256,indexed address,indexed uint256,address,indexed address,uint256,uint256)
          handler: handleOfferAccepted
        - event: OfferCancelled(uint256,indexed address,indexed uint256,indexed address)
          handler: handleOfferCancelled
      file: ./src/handlers/aurora/offer.ts

  # - kind: ethereum/contract
  #   name: CollectionBid
  #   network: {{network}}
  #   source:
  #     address: "{{collectionBidAddress}}"
  #     abi: CollectionBid
  #     startBlock: {{startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.5
  #     language: wasm/assemblyscript
  #     entities:
  #       - NFT
  #       - NFTContract
  #       - Account
  #     abis:
  #       - name: CollectionBid
  #         file: ./abis/CollectionBid.json
  #     eventHandlers:
  #       - event: BidCreated(bytes32,indexed address,indexed address,uint256,uint256)
  #         handler: handleBidCreated
  #       - event: BidAccepted(bytes32,indexed address,indexed uint256,address,indexed address,uint256)
  #         handler: handleBidAccepted
  #       - event: BidCancelled(bytes32,indexed address,indexed address)
  #         handler: handleBidCancelled
  #     file: ./src/handlers/aurora/collectionBid.ts

    
{{#erc721Factories}}
  - kind: ethereum/contract
    name: {{name}}
    network: {{network}}
    source:
      address: "{{address}}"
      abi: EndemicNFTFactory
      startBlock: {{block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFTContract
        - Account
      abis:
        - name: EndemicNFTFactory
          file: ./abis/EndemicNFTFactory.json
      eventHandlers:
        - event: NFTContractCreated(indexed address,indexed address,string,string,string)
          handler: handleCreated
      file: ./src/handlers/aurora/erc721Factory.ts
{{/erc721Factories}}

  # - kind: ethereum/contract
  #   name: EndemicERC1155Factory
  #   network: {{network}}
  #   source:
  #     address: "{{erc1155FactoryAddress}}"
  #     abi: EndemicERC1155Factory
  #     startBlock: {{startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.5
  #     language: wasm/assemblyscript
  #     entities:
  #       - NFTContract
  #       - Account
  #     abis:
  #       - name: EndemicERC1155Factory
  #         file: ./abis/EndemicERC1155Factory.json
  #     eventHandlers:
  #       - event: Created(indexed address,indexed address,string,string,string)
  #         handler: handleCreated
  #     file: ./src/handlers/erc1155Factory.ts

  - kind: ethereum/contract
    name: RoyaltiesProvider
    network: {{network}}
    source:
      address: "{{royaltiesProviderAddress}}"
      abi: RoyaltiesProvider
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFTContract
        - NFT
      abis:
        - name: RoyaltiesProvider
          file: ./abis/RoyaltiesProvider.json
      eventHandlers:
        - event: RoyaltiesSetForCollection(indexed address,address,uint256)
          handler: handleRoyaltiesSetForCollection
        - event:  RoyaltiesSetForToken(indexed address,indexed uint256,address,uint256)
          handler: handleRoyaltiesSetForToken
      file: ./src/handlers/royalties.ts

  - kind: ethereum/contract
    name: ContractImporter
    network: {{network}}
    source:
      address: "{{contractImporterAddress}}"
      abi: ContractImporter
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFTContract
        - NFT
      abis:
        - name: ContractImporter
          file: ./abis/ContractImporter.json
        - name: Collection
          file: ./abis/Collection.json
      eventHandlers:
        - event: CollectionAdded(address,string)
          handler: handleCollectionAdded
      file: ./src/handlers/aurora/importer.ts

{{#collections}}
  - kind: ethereum/contract
    name: {{name}}
    network: {{network}}
    source:
      address: "{{address}}"
      abi: Collection
      startBlock: {{block}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFT
        - Account
      abis:
        - name: Collection
          file: ./abis/Collection.json
        - name: Exchange
          file: ./abis/EndemicExchange.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: Mint(indexed uint256,indexed address)
          handler: handleMint
      file: ./src/handlers/erc721.ts
{{/collections}}

templates:
  - kind: ethereum/contract
    name: Collection
    network: {{network}}
    source:
      abi: Collection
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFT
        - Account
      abis:
        - name: Collection
          file: ./abis/AuroraCollection.json
        - name: Exchange
          file: ./abis/EndemicExchange.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: Mint(indexed uint256,address)
          handler: handleMint
      file: ./src/handlers/erc721.ts 
  - kind: ethereum/contract
    name: EndemicERC1155
    network: {{network}}
    source:
      abi: EndemicERC1155
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - NFT
        - Account
      abis:
        - name: EndemicERC1155
          file: ./abis/EndemicERC1155.json
        - name: Exchange
          file: ./abis/EndemicExchange.json  
      eventHandlers:
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        # - event:  TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
        #   handler: handleTransferBatch
        - event: Create(indexed uint256,address,uint256)
          handler: handleCreate
      file: ./src/handlers/erc1155.ts
